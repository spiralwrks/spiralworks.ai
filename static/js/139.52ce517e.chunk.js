"use strict";(self.webpackChunkspiral_works=self.webpackChunkspiral_works||[]).push([[139],{139:(e,o,t)=>{t.r(o),t.d(o,{default:()=>c});var n=t(950),i=t(465),r=t(226),a=t(437);const s={nodeGeometry:null,nodeMaterial:null,nodes:null,connectionGeometry:null,connectionMaterial:null,connections:null,flowGeometry:null,flowMaterial:null,flowParticles:null};var l=t(414);const c=function(){const e=(0,n.useRef)(),{theme:o}=(0,n.useContext)(i.D);return(0,n.useEffect)((()=>{let t;const n={primary:"dark"===o?"#a64dff":"#8622c9",secondary:"#3222c9",accent:"dark"===o?"#a64dff":"#8622c9"};return e.current&&(t=function(e){var o,t;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e.current)return void console.error("No canvas ref provided for WebGL");const i=e.current;console.log("Canvas element:",i),console.log("Canvas dimensions:",i.clientWidth,i.clientHeight);const l=new r.Z58,c=/Android|webOS|iPhone|iPad|IEMobile|Opera Mini/i.test(navigator.userAgent);let d=(()=>{if(n)return n;const e="dark"===document.documentElement.getAttribute("data-theme");return{primary:e?"#a64dff":"#8622c9",secondary:"#3222c9",accent:e?"#a64dff":"#8622c9"}})();const h={nodeCount:c?800:1600,flowParticleCount:c?2500:5e3,nodeSize:c?.008:.01,flowParticleSize:c?.004:.005,networkRadius:c?3.2:2.8,connectionOpacity:.12,flowSpeed:.2,primaryColor:d.primary,secondaryColor:d.secondary,accentColor:d.accent};let w=[],p=[],f=[];(()=>{s.nodes&&(l.remove(s.nodes),s.nodeGeometry&&s.nodeGeometry.dispose(),s.nodeMaterial&&s.nodeMaterial.dispose()),s.connections&&(l.remove(s.connections),s.connectionGeometry&&s.connectionGeometry.dispose(),s.connectionMaterial&&s.connectionMaterial.dispose()),s.flowParticles&&(l.remove(s.flowParticles),s.flowGeometry&&s.flowGeometry.dispose(),s.flowMaterial&&s.flowMaterial.dispose()),w=[];const e=[{count:Math.floor(.4*h.nodeCount),type:"core",radius:.3},{count:Math.floor(.3*h.nodeCount),type:"dendrites",radius:.6},{count:Math.floor(.3*h.nodeCount),type:"web",radius:1}];e.forEach((o=>{for(let t=0;t<o.count;t++){let n,i,a,s;if("core"===o.type){const e=Math.PI*(3-Math.sqrt(5)),r=t/o.count,l=Math.pow(r,.7)*h.networkRadius*o.radius,c=t*e,d=Math.acos(1-2*r);n=l*Math.cos(c)*Math.sin(d),i=l*Math.sin(c)*Math.sin(d),a=l*Math.cos(d),s="core"}else if("dendrites"===o.type){const e=8,r=t%e,l=Math.floor(t/e)/Math.floor(o.count/e),c=r/e*Math.PI*2,d=l*h.networkRadius*o.radius,w=c+.5*Math.sin(8*l),p=.3*Math.sin(6*l);n=d*Math.cos(w),i=d*Math.sin(w)+p,a=(Math.random()-.5)*d*.6,s="dendrite"}else{const e=(.4*Math.random()+.6)*h.networkRadius*o.radius,t=Math.random()*Math.PI*2,r=Math.acos(1-2*Math.random());n=e*Math.cos(t)*Math.sin(r),i=e*Math.sin(t)*Math.sin(r),a=e*Math.cos(r),s="web"}const l=.05;n+=(Math.random()-.5)*l,i+=(Math.random()-.5)*l,a+=(Math.random()-.5)*l,w.push({position:new r.Pq0(n,i,a),connections:[],activity:Math.random(),pulsePhase:Math.random()*Math.PI*2,nodeType:s,structureIndex:e.indexOf(o)})}})),p=[];for(let r=0;r<w.length;r++){const e=w[r],o=[];for(let n=0;n<w.length;n++)if(r!==n){const t=e.position.distanceTo(w[n].position);o.push({index:n,distance:t,node:w[n]})}let t;o.sort(((e,o)=>e.distance-o.distance)),t="core"===e.nodeType?c?15:25:"dendrite"===e.nodeType?c?10:18:c?6:10;for(let n=0;n<Math.min(t,o.length);n++){const t=o[n];Math.random()>.1&&t.distance<.6*h.networkRadius&&(p.some((e=>e.from===r&&e.to===t.index||e.from===t.index&&e.to===r))||(p.push({from:r,to:t.index,strength:Math.max(.3,1-t.distance/h.networkRadius),layer:e.layer}),e.connections.push(t.index),t.node.connections.push(r)))}}const o=new Float32Array(3*w.length),t=new Float32Array(3*w.length),n=new r.Q1f(h.primaryColor),i=new r.Q1f(h.accentColor),a=new r.Q1f(h.secondaryColor);w.forEach(((e,r)=>{o[3*r]=e.position.x,o[3*r+1]=e.position.y,o[3*r+2]=e.position.z;let s=n.clone();"core"===e.nodeType?s.lerp(i,.3):"dendrite"===e.nodeType?s.lerp(a,.4):s.lerp(i,.5*Math.random()),t[3*r]=s.r,t[3*r+1]=s.g,t[3*r+2]=s.b})),s.nodeGeometry=new r.LoY,s.nodeGeometry.setAttribute("position",new r.THS(o,3)),s.nodeGeometry.setAttribute("color",new r.THS(t,3)),s.nodeMaterial=new r.BH$({size:2*h.nodeSize,sizeAttenuation:!0,transparent:!0,opacity:.3,vertexColors:!0,blending:r.EZo}),s.nodes=new r.ONl(s.nodeGeometry,s.nodeMaterial),l.add(s.nodes);const d=new r.LoY,m=new Float32Array(6*p.length),u=new Float32Array(6*p.length),M=new r.Q1f(h.primaryColor),y=new r.Q1f(h.secondaryColor);for(let r=0;r<p.length;r++){const e=p[r],o=w[e.from].position,t=w[e.to].position;m[6*r]=o.x,m[6*r+1]=o.y,m[6*r+2]=o.z,m[6*r+3]=t.x,m[6*r+4]=t.y,m[6*r+5]=t.z;const n=Math.random(),i=M.clone().lerp(y,.7*n),a=.7+.3*Math.random();i.multiplyScalar(a),u[6*r]=i.r,u[6*r+1]=i.g,u[6*r+2]=i.b,u[6*r+3]=i.r,u[6*r+4]=i.g,u[6*r+5]=i.b}d.setAttribute("position",new r.THS(m,3)),d.setAttribute("color",new r.THS(u,3)),s.connectionMaterial=new r.mrM({vertexColors:!0,transparent:!0,opacity:1.5*h.connectionOpacity,blending:r.EZo,linewidth:1}),s.connections=new r.DXC(d,s.connectionMaterial),l.add(s.connections),s.flowGeometry=new r.LoY;const g=new Float32Array(3*h.flowParticleCount),v=new Float32Array(3*h.flowParticleCount);f=[];for(let s=0;s<h.flowParticleCount&&0!==p.length;s++){const e=p[Math.floor(Math.random()*p.length)],o=Math.random(),t=w[e.from].position,n=w[e.to].position,i=t.clone().lerp(n,o);g[3*s]=i.x,g[3*s+1]=i.y,g[3*s+2]=i.z;const a=(new r.Q1f).lerpColors(new r.Q1f(h.primaryColor),new r.Q1f(h.secondaryColor),Math.random());v[3*s]=a.r,v[3*s+1]=a.g,v[3*s+2]=a.b,f.push({connectionIndex:Math.floor(Math.random()*p.length),progress:o,speed:(.5*Math.random()+.5)*h.flowSpeed,life:1})}s.flowGeometry.setAttribute("position",new r.THS(g,3)),s.flowGeometry.setAttribute("color",new r.THS(v,3)),s.flowMaterial=new r.BH$({size:.5*h.flowParticleSize,sizeAttenuation:!0,transparent:!0,opacity:.4,vertexColors:!0,blending:r.EZo}),s.flowParticles=new r.ONl(s.flowGeometry,s.flowMaterial),l.add(s.flowParticles)})();const m={width:i.clientWidth||(null===(o=i.parentElement)||void 0===o?void 0:o.clientWidth)||window.innerWidth,height:i.clientHeight||(null===(t=i.parentElement)||void 0===t?void 0:t.clientHeight)||window.innerHeight};console.log("Renderer sizes:",m);const u=new r.ubm(60,m.width/m.height,.1,100);u.position.set(0,1,5.5),u.lookAt(0,0,0),l.add(u);const M=new a.JeP({canvas:i,alpha:!0,antialias:!1,powerPreference:"high-performance"});M.setSize(m.width,m.height),M.setPixelRatio(Math.min(window.devicePixelRatio,1.5));const y=()=>{m.width=i.clientWidth||i.parentElement.clientWidth,m.height=i.clientHeight||i.parentElement.clientHeight,u.aspect=m.width/m.height,u.updateProjectionMatrix(),M.setSize(m.width,m.height),M.setPixelRatio(Math.min(window.devicePixelRatio,2))};window.addEventListener("resize",y);const g=new r.zD7,v=()=>{const e=g.getElapsedTime(),o=g.getDelta();if(s.nodes&&(u.position.x=5.5*Math.cos(.1*e),u.position.z=5.5*Math.sin(.1*e),u.lookAt(0,0,0)),s.flowParticles&&p.length>0){const e=s.flowGeometry.attributes.position.array;for(let t=0;t<f.length;t++){const n=f[t];n.progress+=n.speed*o,n.progress>1&&(n.progress=0,n.connectionIndex=Math.floor(Math.random()*p.length));const i=p[n.connectionIndex];if(i){const o=w[i.from].position,a=w[i.to].position,s=o.clone().lerp(a,n.progress),l=a.clone().sub(o).normalize(),c=new r.Pq0;Math.abs(l.y)<.9?c.crossVectors(l,new r.Pq0(0,1,0)):c.crossVectors(l,new r.Pq0(1,0,0)),c.normalize(),e[3*t]=s.x,e[3*t+1]=s.y,e[3*t+2]=s.z}}s.flowGeometry.attributes.position.needsUpdate=!0}M.render(l,u),window.requestAnimationFrame(v)};return v(),()=>{window.removeEventListener("resize",y),s.nodes&&(l.remove(s.nodes),s.nodeGeometry&&s.nodeGeometry.dispose(),s.nodeMaterial&&s.nodeMaterial.dispose()),s.connections&&(l.remove(s.connections),s.connectionGeometry&&s.connectionGeometry.dispose(),s.connectionMaterial&&s.connectionMaterial.dispose()),s.flowParticles&&(l.remove(s.flowParticles),s.flowGeometry&&s.flowGeometry.dispose(),s.flowMaterial&&s.flowMaterial.dispose()),M&&M.dispose()}}(e,n)),()=>{t&&t()}}),[o]),(0,l.jsx)("canvas",{ref:e,className:"data-flow-canvas",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:1,pointerEvents:"none",display:"block"}})}}}]);