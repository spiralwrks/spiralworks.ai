"use strict";(self.webpackChunkspiral_works=self.webpackChunkspiral_works||[]).push([[139],{139:(e,o,t)=>{t.r(o),t.d(o,{default:()=>l});var n=t(950),i=t(465),r=t(437);const a={nodeGeometry:null,nodeMaterial:null,nodes:null,connectionGeometry:null,connectionMaterial:null,connections:null,flowGeometry:null,flowMaterial:null,flowParticles:null};var s=t(414);const l=function(){const e=(0,n.useRef)(),{theme:o}=(0,n.useContext)(i.D);return(0,n.useEffect)((()=>{let t;const n={primary:"dark"===o?"#a64dff":"#8622c9",secondary:"#3222c9",accent:"dark"===o?"#a64dff":"#8622c9"};return e.current&&(t=function(e){var o,t;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e.current)return void console.error("No canvas ref provided for WebGL");const i=e.current;console.log("Canvas element:",i),console.log("Canvas dimensions:",i.clientWidth,i.clientHeight);const s=new r.Z58,l=/Android|webOS|iPhone|iPad|IEMobile|Opera Mini/i.test(navigator.userAgent);let c=(()=>{if(n)return n;const e="dark"===document.documentElement.getAttribute("data-theme");return{primary:e?"#a64dff":"#8622c9",secondary:"#3222c9",accent:e?"#a64dff":"#8622c9"}})();const d={nodeCount:l?600:1200,flowParticleCount:l?2e3:4e3,nodeSize:l?.006:.008,flowParticleSize:l?.003:.004,networkRadius:l?1.4:1.3,connectionOpacity:.12,flowSpeed:.2,primaryColor:c.primary,secondaryColor:c.secondary,accentColor:c.accent};let h=[],w=[],p=[];(()=>{a.nodes&&(s.remove(a.nodes),a.nodeGeometry&&a.nodeGeometry.dispose(),a.nodeMaterial&&a.nodeMaterial.dispose()),a.connections&&(s.remove(a.connections),a.connectionGeometry&&a.connectionGeometry.dispose(),a.connectionMaterial&&a.connectionMaterial.dispose()),a.flowParticles&&(s.remove(a.flowParticles),a.flowGeometry&&a.flowGeometry.dispose(),a.flowMaterial&&a.flowMaterial.dispose()),h=[];const e=[{count:Math.floor(.4*d.nodeCount),type:"core",radius:.3},{count:Math.floor(.3*d.nodeCount),type:"dendrites",radius:.6},{count:Math.floor(.3*d.nodeCount),type:"web",radius:1}];e.forEach((o=>{for(let t=0;t<o.count;t++){let n,i,a,s;if("core"===o.type){const e=Math.PI*(3-Math.sqrt(5)),r=t/o.count,l=Math.pow(r,.7)*d.networkRadius*o.radius,c=t*e,h=Math.acos(1-2*r);n=l*Math.cos(c)*Math.sin(h),i=l*Math.sin(c)*Math.sin(h),a=l*Math.cos(h),s="core"}else if("dendrites"===o.type){const e=8,r=t%e,l=Math.floor(t/e)/Math.floor(o.count/e),c=r/e*Math.PI*2,h=l*d.networkRadius*o.radius,w=c+.5*Math.sin(8*l),p=.3*Math.sin(6*l);n=h*Math.cos(w),i=h*Math.sin(w)+p,a=(Math.random()-.5)*h*.6,s="dendrite"}else{const e=(.4*Math.random()+.6)*d.networkRadius*o.radius,t=Math.random()*Math.PI*2,r=Math.acos(1-2*Math.random());n=e*Math.cos(t)*Math.sin(r),i=e*Math.sin(t)*Math.sin(r),a=e*Math.cos(r),s="web"}const l=.05;n+=(Math.random()-.5)*l,i+=(Math.random()-.5)*l,a+=(Math.random()-.5)*l,h.push({position:new r.Pq0(n,i,a),connections:[],activity:Math.random(),pulsePhase:Math.random()*Math.PI*2,nodeType:s,structureIndex:e.indexOf(o)})}})),w=[];for(let r=0;r<h.length;r++){const e=h[r],o=[];for(let n=0;n<h.length;n++)if(r!==n){const t=e.position.distanceTo(h[n].position);o.push({index:n,distance:t,node:h[n]})}let t;o.sort(((e,o)=>e.distance-o.distance)),t="core"===e.nodeType?l?15:25:"dendrite"===e.nodeType?l?10:18:l?6:10;for(let n=0;n<Math.min(t,o.length);n++){const t=o[n];Math.random()>.1&&t.distance<.6*d.networkRadius&&(w.some((e=>e.from===r&&e.to===t.index||e.from===t.index&&e.to===r))||(w.push({from:r,to:t.index,strength:Math.max(.3,1-t.distance/d.networkRadius),layer:e.layer}),e.connections.push(t.index),t.node.connections.push(r)))}}const o=new Float32Array(3*h.length),t=new Float32Array(3*h.length),n=new r.Q1f(d.primaryColor),i=new r.Q1f(d.accentColor),c=new r.Q1f(d.secondaryColor);h.forEach(((e,r)=>{o[3*r]=e.position.x,o[3*r+1]=e.position.y,o[3*r+2]=e.position.z;let a=n.clone();"core"===e.nodeType?a.lerp(i,.3):"dendrite"===e.nodeType?a.lerp(c,.4):a.lerp(i,.5*Math.random()),t[3*r]=a.r,t[3*r+1]=a.g,t[3*r+2]=a.b})),a.nodeGeometry=new r.LoY,a.nodeGeometry.setAttribute("position",new r.THS(o,3)),a.nodeGeometry.setAttribute("color",new r.THS(t,3)),a.nodeMaterial=new r.BH$({size:2*d.nodeSize,sizeAttenuation:!0,transparent:!0,opacity:.3,vertexColors:!0,blending:r.EZo}),a.nodes=new r.ONl(a.nodeGeometry,a.nodeMaterial),s.add(a.nodes);const f=new r.LoY,m=new Float32Array(6*w.length),u=new Float32Array(6*w.length),M=new r.Q1f(d.primaryColor),y=new r.Q1f(d.secondaryColor);for(let r=0;r<w.length;r++){const e=w[r],o=h[e.from].position,t=h[e.to].position;m[6*r]=o.x,m[6*r+1]=o.y,m[6*r+2]=o.z,m[6*r+3]=t.x,m[6*r+4]=t.y,m[6*r+5]=t.z;const n=Math.random(),i=M.clone().lerp(y,.7*n),a=.7+.3*Math.random();i.multiplyScalar(a),u[6*r]=i.r,u[6*r+1]=i.g,u[6*r+2]=i.b,u[6*r+3]=i.r,u[6*r+4]=i.g,u[6*r+5]=i.b}f.setAttribute("position",new r.THS(m,3)),f.setAttribute("color",new r.THS(u,3)),a.connectionMaterial=new r.mrM({vertexColors:!0,transparent:!0,opacity:1.5*d.connectionOpacity,blending:r.EZo,linewidth:1}),a.connections=new r.DXC(f,a.connectionMaterial),s.add(a.connections),a.flowGeometry=new r.LoY;const g=new Float32Array(3*d.flowParticleCount),v=new Float32Array(3*d.flowParticleCount);p=[];for(let a=0;a<d.flowParticleCount&&0!==w.length;a++){const e=w[Math.floor(Math.random()*w.length)],o=Math.random(),t=h[e.from].position,n=h[e.to].position,i=t.clone().lerp(n,o);g[3*a]=i.x,g[3*a+1]=i.y,g[3*a+2]=i.z;const s=(new r.Q1f).lerpColors(new r.Q1f(d.primaryColor),new r.Q1f(d.secondaryColor),Math.random());v[3*a]=s.r,v[3*a+1]=s.g,v[3*a+2]=s.b,p.push({connectionIndex:Math.floor(Math.random()*w.length),progress:o,speed:(.5*Math.random()+.5)*d.flowSpeed,life:1})}a.flowGeometry.setAttribute("position",new r.THS(g,3)),a.flowGeometry.setAttribute("color",new r.THS(v,3)),a.flowMaterial=new r.BH$({size:.5*d.flowParticleSize,sizeAttenuation:!0,transparent:!0,opacity:.4,vertexColors:!0,blending:r.EZo}),a.flowParticles=new r.ONl(a.flowGeometry,a.flowMaterial),s.add(a.flowParticles)})();const f={width:i.clientWidth||(null===(o=i.parentElement)||void 0===o?void 0:o.clientWidth)||window.innerWidth,height:i.clientHeight||(null===(t=i.parentElement)||void 0===t?void 0:t.clientHeight)||window.innerHeight};console.log("Renderer sizes:",f);const m=new r.ubm(60,f.width/f.height,.1,100);m.position.set(0,1,4),m.lookAt(0,0,0),s.add(m);const u=new r.JeP({canvas:i,alpha:!0,antialias:!1,powerPreference:"high-performance"});u.setSize(f.width,f.height),u.setPixelRatio(Math.min(window.devicePixelRatio,1.5));const M=()=>{f.width=i.clientWidth||i.parentElement.clientWidth,f.height=i.clientHeight||i.parentElement.clientHeight,m.aspect=f.width/f.height,m.updateProjectionMatrix(),u.setSize(f.width,f.height),u.setPixelRatio(Math.min(window.devicePixelRatio,2))};window.addEventListener("resize",M);const y=new r.zD7,g=()=>{const e=y.getElapsedTime(),o=y.getDelta();if(a.nodes&&(m.position.x=4*Math.cos(.1*e),m.position.z=4*Math.sin(.1*e),m.lookAt(0,0,0)),a.flowParticles&&w.length>0){const e=a.flowGeometry.attributes.position.array;for(let t=0;t<p.length;t++){const n=p[t];n.progress+=n.speed*o,n.progress>1&&(n.progress=0,n.connectionIndex=Math.floor(Math.random()*w.length));const i=w[n.connectionIndex];if(i){const o=h[i.from].position,a=h[i.to].position,s=o.clone().lerp(a,n.progress),l=a.clone().sub(o).normalize(),c=new r.Pq0;Math.abs(l.y)<.9?c.crossVectors(l,new r.Pq0(0,1,0)):c.crossVectors(l,new r.Pq0(1,0,0)),c.normalize(),e[3*t]=s.x,e[3*t+1]=s.y,e[3*t+2]=s.z}}a.flowGeometry.attributes.position.needsUpdate=!0}u.render(s,m),window.requestAnimationFrame(g)};return g(),()=>{window.removeEventListener("resize",M),a.nodes&&(s.remove(a.nodes),a.nodeGeometry&&a.nodeGeometry.dispose(),a.nodeMaterial&&a.nodeMaterial.dispose()),a.connections&&(s.remove(a.connections),a.connectionGeometry&&a.connectionGeometry.dispose(),a.connectionMaterial&&a.connectionMaterial.dispose()),a.flowParticles&&(s.remove(a.flowParticles),a.flowGeometry&&a.flowGeometry.dispose(),a.flowMaterial&&a.flowMaterial.dispose()),u&&u.dispose()}}(e,n)),()=>{t&&t()}}),[o]),(0,s.jsx)("canvas",{ref:e,className:"data-flow-canvas",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:1,pointerEvents:"none",display:"block"}})}}}]);